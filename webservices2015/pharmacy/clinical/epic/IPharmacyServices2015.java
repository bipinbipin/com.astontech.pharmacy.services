
package webservices2015.pharmacy.clinical.epic;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.datacontract.schemas._2004._07.epic_clinical_pharmacy.DeliveryDestination;
import org.datacontract.schemas._2004._07.epic_clinical_pharmacy.DeliveryMethod;
import org.datacontract.schemas._2004._07.epic_clinical_pharmacy.FillSubset;
import org.datacontract.schemas._2004._07.epic_clinical_pharmacy.PatientPaymentMethod;
import org.datacontract.schemas._2004._07.epic_clinical_pharmacy.PrescriptionSubset;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "IPharmacyServices2015", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
@XmlSeeAlso({
    com.epicsystems.interconnect_2004_05.ObjectFactory.class,
    webservices2015.pharmacy.clinical.epic.ObjectFactory.class,
    com.microsoft.schemas._2003._10.serialization.ObjectFactory.class,
    org.datacontract.schemas._2004._07.epic_clinical_pharmacy.ObjectFactory.class,
    org.datacontract.schemas._2004._07.epic_clinical.ObjectFactory.class
})
public interface IPharmacyServices2015 {


    /**
     * 
     * @param patientMRN
     * @param fillId
     * @param pharmacyNCPDPId
     * @param prescriptionNumber
     * @param whichFills
     * @param systemId
     * @param whichPrescriptions
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.PrescriptionInfo
     * @throws IPharmacyServices2015GetPrescriptionInfoApplicationFaultFaultMessage
     * @throws IPharmacyServices2015GetPrescriptionInfoInternalFaultFaultMessage
     */
    @WebMethod(operationName = "GetPrescriptionInfo", action = "Epic.Clinical.Pharmacy.WebServices2015.GetPrescriptionInfo")
    @WebResult(name = "GetPrescriptionInfoResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "GetPrescriptionInfo", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetPrescriptionInfo")
    @ResponseWrapper(localName = "GetPrescriptionInfoResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetPrescriptionInfoResponse")
    public PrescriptionInfo getPrescriptionInfo(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId,
        @WebParam(name = "pharmacyNCPDPId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String pharmacyNCPDPId,
        @WebParam(name = "patientMRN", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String patientMRN,
        @WebParam(name = "prescriptionNumber", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String prescriptionNumber,
        @WebParam(name = "fillId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String fillId,
        @WebParam(name = "whichPrescriptions", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        PrescriptionSubset whichPrescriptions,
        @WebParam(name = "whichFills", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        FillSubset whichFills)
        throws IPharmacyServices2015GetPrescriptionInfoApplicationFaultFaultMessage, IPharmacyServices2015GetPrescriptionInfoInternalFaultFaultMessage
    ;

    /**
     * 
     * @param prescriptionId
     * @param fillId
     * @param pharmacyNCPDPId
     * @param whichFills
     * @param systemId
     * @param whichPrescriptions
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.PrescriptionInfo
     * @throws IPharmacyServices2015GetPrescriptionInfoByIdApplicationFaultFaultMessage
     * @throws IPharmacyServices2015GetPrescriptionInfoByIdInternalFaultFaultMessage
     */
    @WebMethod(operationName = "GetPrescriptionInfoById", action = "Epic.Clinical.Pharmacy.WebServices2015.GetPrescriptionInfoById")
    @WebResult(name = "GetPrescriptionInfoByIdResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "GetPrescriptionInfoById", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetPrescriptionInfoById")
    @ResponseWrapper(localName = "GetPrescriptionInfoByIdResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetPrescriptionInfoByIdResponse")
    public PrescriptionInfo getPrescriptionInfoById(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId,
        @WebParam(name = "pharmacyNCPDPId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String pharmacyNCPDPId,
        @WebParam(name = "prescriptionId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String prescriptionId,
        @WebParam(name = "fillId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String fillId,
        @WebParam(name = "whichPrescriptions", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        PrescriptionSubset whichPrescriptions,
        @WebParam(name = "whichFills", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        FillSubset whichFills)
        throws IPharmacyServices2015GetPrescriptionInfoByIdApplicationFaultFaultMessage, IPharmacyServices2015GetPrescriptionInfoByIdInternalFaultFaultMessage
    ;

    /**
     * 
     * @param patientMRN
     * @param pharmacyNCPDPId
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.ArrayOfCreditCard
     * @throws IPharmacyServices2015GetCreditCardsInternalFaultFaultMessage
     * @throws IPharmacyServices2015GetCreditCardsApplicationFaultFaultMessage
     */
    @WebMethod(operationName = "GetCreditCards", action = "Epic.Clinical.Pharmacy.WebServices2015.GetCreditCards")
    @WebResult(name = "GetCreditCardsResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "GetCreditCards", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetCreditCards")
    @ResponseWrapper(localName = "GetCreditCardsResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetCreditCardsResponse")
    public ArrayOfCreditCard getCreditCards(
        @WebParam(name = "patientMRN", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String patientMRN,
        @WebParam(name = "pharmacyNCPDPId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String pharmacyNCPDPId)
        throws IPharmacyServices2015GetCreditCardsApplicationFaultFaultMessage, IPharmacyServices2015GetCreditCardsInternalFaultFaultMessage
    ;

    /**
     * 
     * @param requests
     * @param pharmacyNCPDPId
     * @param userId
     * @param systemId
     * @param workstationId
     * @param userIdType
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.UpdateResult
     * @throws IPharmacyServices2015AdvanceFillStatusApplicationFaultFaultMessage
     * @throws IPharmacyServices2015AdvanceFillStatusInternalFaultFaultMessage
     */
    @WebMethod(operationName = "AdvanceFillStatus", action = "Epic.Clinical.Pharmacy.WebServices2015.AdvanceFillStatus")
    @WebResult(name = "AdvanceFillStatusResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "AdvanceFillStatus", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.AdvanceFillStatus")
    @ResponseWrapper(localName = "AdvanceFillStatusResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.AdvanceFillStatusResponse")
    public UpdateResult advanceFillStatus(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId,
        @WebParam(name = "requests", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        ArrayOfAdvanceFillStatusRequest requests,
        @WebParam(name = "pharmacyNCPDPId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String pharmacyNCPDPId,
        @WebParam(name = "userId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userId,
        @WebParam(name = "userIdType", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userIdType,
        @WebParam(name = "workstationId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String workstationId)
        throws IPharmacyServices2015AdvanceFillStatusApplicationFaultFaultMessage, IPharmacyServices2015AdvanceFillStatusInternalFaultFaultMessage
    ;

    /**
     * 
     * @param requests
     * @param userId
     * @param systemId
     * @param workstationId
     * @param isInteractive
     * @param userIdType
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.UpdateResult
     * @throws IPharmacyServices2015DispenseFillsApplicationFaultFaultMessage
     * @throws IPharmacyServices2015DispenseFillsInternalFaultFaultMessage
     */
    @WebMethod(operationName = "DispenseFills", action = "Epic.Clinical.Pharmacy.WebServices2015.DispenseFills")
    @WebResult(name = "DispenseFillsResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "DispenseFills", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.DispenseFills")
    @ResponseWrapper(localName = "DispenseFillsResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.DispenseFillsResponse")
    public UpdateResult dispenseFills(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId,
        @WebParam(name = "requests", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        ArrayOfDispenseFillRequest requests,
        @WebParam(name = "isInteractive", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        Boolean isInteractive,
        @WebParam(name = "userId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userId,
        @WebParam(name = "userIdType", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userIdType,
        @WebParam(name = "workstationId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String workstationId)
        throws IPharmacyServices2015DispenseFillsApplicationFaultFaultMessage, IPharmacyServices2015DispenseFillsInternalFaultFaultMessage
    ;

    /**
     * 
     * @param requests
     * @param cancelingPharmacyNcpdpId
     * @param userId
     * @param returnPharmacyNcpdpId
     * @param systemId
     * @param cancelReason
     * @param workstationId
     * @param isInteractive
     * @param userIdType
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.UpdateResult
     * @throws IPharmacyServices2015CancelFillsInternalFaultFaultMessage
     * @throws IPharmacyServices2015CancelFillsApplicationFaultFaultMessage
     */
    @WebMethod(operationName = "CancelFills", action = "Epic.Clinical.Pharmacy.WebServices2015.CancelFills")
    @WebResult(name = "CancelFillsResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "CancelFills", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.CancelFills")
    @ResponseWrapper(localName = "CancelFillsResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.CancelFillsResponse")
    public UpdateResult cancelFills(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId,
        @WebParam(name = "requests", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        ArrayOfCancelFillRequest requests,
        @WebParam(name = "isInteractive", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        Boolean isInteractive,
        @WebParam(name = "userId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userId,
        @WebParam(name = "userIdType", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userIdType,
        @WebParam(name = "workstationId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String workstationId,
        @WebParam(name = "returnPharmacyNcpdpId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String returnPharmacyNcpdpId,
        @WebParam(name = "cancelingPharmacyNcpdpId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String cancelingPharmacyNcpdpId,
        @WebParam(name = "cancelReason", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String cancelReason)
        throws IPharmacyServices2015CancelFillsApplicationFaultFaultMessage, IPharmacyServices2015CancelFillsInternalFaultFaultMessage
    ;

    /**
     * 
     * @param systemId
     * @return
     *     returns java.lang.String
     * @throws IPharmacyServices2015GetVersionInternalFaultFaultMessage
     * @throws IPharmacyServices2015GetVersionApplicationFaultFaultMessage
     */
    @WebMethod(operationName = "GetVersion", action = "Epic.Clinical.Pharmacy.WebServices2015.GetVersion")
    @WebResult(name = "GetVersionResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "GetVersion", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetVersion")
    @ResponseWrapper(localName = "GetVersionResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.GetVersionResponse")
    public String getVersion(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId)
        throws IPharmacyServices2015GetVersionApplicationFaultFaultMessage, IPharmacyServices2015GetVersionInternalFaultFaultMessage
    ;

    /**
     * 
     * @param creditCardId
     * @param deliveryMethod
     * @param contactMethods
     * @param pickupDateTime
     * @param contactRequested
     * @param commentsURI
     * @param isInteractive
     * @param freeTextPickupPharmacy
     * @param userIdType
     * @param requests
     * @param pickupPharmacyNCPDPId
     * @param userId
     * @param requestedNotificationsWhenFilled
     * @param systemId
     * @param deliveryComments
     * @param workstationId
     * @param comments
     * @param deliveryDestination
     * @param paymentMethod
     * @return
     *     returns webservices2015.pharmacy.clinical.epic.UpdateResult
     * @throws IPharmacyServices2015RequestFillsInternalFaultFaultMessage
     * @throws IPharmacyServices2015RequestFillsApplicationFaultFaultMessage
     */
    @WebMethod(operationName = "RequestFills", action = "Epic.Clinical.Pharmacy.WebServices2015.RequestFills")
    @WebResult(name = "RequestFillsResult", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
    @RequestWrapper(localName = "RequestFills", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.RequestFills")
    @ResponseWrapper(localName = "RequestFillsResponse", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", className = "webservices2015.pharmacy.clinical.epic.RequestFillsResponse")
    public UpdateResult requestFills(
        @WebParam(name = "systemId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String systemId,
        @WebParam(name = "requests", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        ArrayOfFillRequest requests,
        @WebParam(name = "pickupDateTime", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        XMLGregorianCalendar pickupDateTime,
        @WebParam(name = "pickupPharmacyNCPDPId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String pickupPharmacyNCPDPId,
        @WebParam(name = "freeTextPickupPharmacy", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String freeTextPickupPharmacy,
        @WebParam(name = "contactMethods", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        ArrayOfContactMethod contactMethods,
        @WebParam(name = "contactRequested", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        Boolean contactRequested,
        @WebParam(name = "comments", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String comments,
        @WebParam(name = "commentsURI", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String commentsURI,
        @WebParam(name = "deliveryMethod", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        DeliveryMethod deliveryMethod,
        @WebParam(name = "deliveryDestination", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        DeliveryDestination deliveryDestination,
        @WebParam(name = "deliveryComments", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String deliveryComments,
        @WebParam(name = "paymentMethod", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        PatientPaymentMethod paymentMethod,
        @WebParam(name = "creditCardId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String creditCardId,
        @WebParam(name = "RequestedNotificationsWhenFilled", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        ArrayOfContactMethod requestedNotificationsWhenFilled,
        @WebParam(name = "isInteractive", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        Boolean isInteractive,
        @WebParam(name = "userId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userId,
        @WebParam(name = "userIdType", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String userIdType,
        @WebParam(name = "workstationId", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015")
        String workstationId)
        throws IPharmacyServices2015RequestFillsApplicationFaultFaultMessage, IPharmacyServices2015RequestFillsInternalFaultFaultMessage
    ;

}
