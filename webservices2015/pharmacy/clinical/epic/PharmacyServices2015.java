
package webservices2015.pharmacy.clinical.epic;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "PharmacyServices2015", targetNamespace = "Epic.Clinical.Pharmacy.WebServices2015", wsdlLocation = "http://interconnecttst.corp.nmmc.com/Interconnect-WILLOWAMB/wcf/Epic.Clinical.Pharmacy.WebServices2015/PharmacyServices2015.svc?singleWsdl")
public class PharmacyServices2015
    extends Service
{

    private final static URL PHARMACYSERVICES2015_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(webservices2015.pharmacy.clinical.epic.PharmacyServices2015 .class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = webservices2015.pharmacy.clinical.epic.PharmacyServices2015 .class.getResource(".");
            url = new URL(baseUrl, "http://interconnecttst.corp.nmmc.com/Interconnect-WILLOWAMB/wcf/Epic.Clinical.Pharmacy.WebServices2015/PharmacyServices2015.svc?singleWsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://interconnecttst.corp.nmmc.com/Interconnect-WILLOWAMB/wcf/Epic.Clinical.Pharmacy.WebServices2015/PharmacyServices2015.svc?singleWsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        PHARMACYSERVICES2015_WSDL_LOCATION = url;
    }

    public PharmacyServices2015(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PharmacyServices2015() {
        super(PHARMACYSERVICES2015_WSDL_LOCATION, new QName("Epic.Clinical.Pharmacy.WebServices2015", "PharmacyServices2015"));
    }

    /**
     * 
     * @return
     *     returns IPharmacyServices2015
     */
    @WebEndpoint(name = "IPharmacyServices2015")
    public IPharmacyServices2015 getIPharmacyServices2015() {
        return super.getPort(new QName("Epic.Clinical.Pharmacy.WebServices2015", "IPharmacyServices2015"), IPharmacyServices2015.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPharmacyServices2015
     */
    @WebEndpoint(name = "IPharmacyServices2015")
    public IPharmacyServices2015 getIPharmacyServices2015(WebServiceFeature... features) {
        return super.getPort(new QName("Epic.Clinical.Pharmacy.WebServices2015", "IPharmacyServices2015"), IPharmacyServices2015.class, features);
    }

    /**
     * 
     * @return
     *     returns IPharmacyServices2015
     */
    @WebEndpoint(name = "IPharmacyServices20151")
    public IPharmacyServices2015 getIPharmacyServices20151() {
        return super.getPort(new QName("Epic.Clinical.Pharmacy.WebServices2015", "IPharmacyServices20151"), IPharmacyServices2015.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPharmacyServices2015
     */
    @WebEndpoint(name = "IPharmacyServices20151")
    public IPharmacyServices2015 getIPharmacyServices20151(WebServiceFeature... features) {
        return super.getPort(new QName("Epic.Clinical.Pharmacy.WebServices2015", "IPharmacyServices20151"), IPharmacyServices2015.class, features);
    }

    /**
     * 
     * @return
     *     returns IPharmacyServices2015
     */
    @WebEndpoint(name = "IPharmacyServices20152")
    public IPharmacyServices2015 getIPharmacyServices20152() {
        return super.getPort(new QName("Epic.Clinical.Pharmacy.WebServices2015", "IPharmacyServices20152"), IPharmacyServices2015.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPharmacyServices2015
     */
    @WebEndpoint(name = "IPharmacyServices20152")
    public IPharmacyServices2015 getIPharmacyServices20152(WebServiceFeature... features) {
        return super.getPort(new QName("Epic.Clinical.Pharmacy.WebServices2015", "IPharmacyServices20152"), IPharmacyServices2015.class, features);
    }

}
